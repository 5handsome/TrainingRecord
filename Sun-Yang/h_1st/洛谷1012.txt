    题目描述：
	设有n 个正整数，将它们联接成一排，相邻数字首尾相接，组成一个最大的整数。
    输入格式
           第一行有一个整数，表示数字个数n。
           第二行有n 个整数，表示给出的 n 个整数 
    输出格式
           一个正整数，表示最大的整数
    提示：
           对于全部的测试点，保证1≤n≤20,1≤ai≤10的9次方.

      题目分析：
	最开始想的是把所有数字填0补齐   就像13补为1300000000 然后比较按从大到小排序，最后输出。
	但最后发现不行，因为 3 2 314 最大排序是 32314   而我这么排序是31432 所以没办法了 只能看题解。
	看题解之后学会了新的东西，string类型的变量可以相加 string 312,32 相加是string类型的31232.
	所以有了新办法，让两个数相加再反着相加 比较两个“和”的大小，a+b大a就排在前面，都排完后输出.
         关键代码:for(int i = 0;i < n - 1 ; i ++)
	{
		for(int j = i + 1 ;j < n;j ++)
		{
			if(a[i] + a[j] < a[j] + a[i]) swap(a[i],a[j]);
		}
	}


#include<iostream>
#include<math.h>
using namespace std;
int main()
{
	
	int n ;
	cin  >> n ;
	string a[100];
	for(int i = 0;i < n; i ++) cin >> a[i];
	for(int i = 0;i < n - 1 ; i ++)
	{
		for(int j = i + 1 ;j < n;j ++)
		{
			if(a[i] + a[j] < a[j] + a[i]) swap(a[i],a[j]);
		}
	}
	for(int i = 0;i < n; i ++) cout << a[i];
}