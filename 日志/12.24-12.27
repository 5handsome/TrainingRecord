
周四(12.24)   打了一场cf（以前的）Codeforces Round #685 (Div. 2)
周五(12.25)   回顾昨天打的cf
周六(12.26)   继续昨天没整完的博弈论的题
周日(12.27)   去牛客打了场重现赛并进行了总结


cf round #685
	AB两个题还是不难做出来的
	C题因为思路错误卡了很长时间，以后比赛某道题做不出来不能一根筋，得换换思路
	D题是博弈问题，我在这方面练的不是很多。所以我去找了几篇博客学习了一下，把之前整理过的博弈论的题又重做了一遍

牛客重现赛总结：
A.推公式题
先看q>=0的情况

q > n时，直接为0

q <= n时：
n =7   q = 0时

1 2 3 4 5 6 7

当集合B中最小值为1时，集合B共有2^6种情况(1已确定，2-7这六个数可选可不选)
	此时集合A只需最大值小于等于1即可，即2^1 - 1种情况
	因此当集合B中包含1时，共有 (2^6) * (2^1 - 1)种情况
当集合B中最小值为2时，集合B共有2^5种情况
	此时集合A只需最大值小于等于2即可，即2^2 - 1种情况
	因此当集合B中包含1时，共有 (2^5) * (2^2 - 1)种情况
……………………

因此结果就是B中最小值分别为1，2，3，4，5，6，7时的情况数相加

即7 * 2^7 - (2^6 + 2^5 +……+2^0)
=7 * 2^7 - (2^7 - 1)
=6 * 2^7 + 1

n = 7   q = 1时
1 2 3 4 5 6 7
依然可以用上述方法求解

以此类推
n = n   q = q时
 当集合B中最小值为q + 1时，集合B共有2^(n - q - 1)种情况
	此时集合A只需最大值小于等于1即可，即2^0 - 1种情况
	因此当集合B中包含1时，共有 (2^(n - q - 1)) * (2^1 - 1)种情况
当集合B中最小值为q + 2时，集合B共有2^(n - q - 2)种情况
	此时集合A只需最大值小于等于2即可，即2^1 - 1种情况
	因此当集合B中包含1时，共有 (2^(n - q - 1)) * (2^2 - 1)种情况
……………………

公式为(n - q) * (2^(n - q)) - (……)
=(n - q - 1) * (2^(n - q)) + 1



q < 0时

q < (-n)时，随便取，(2^n - 1)^2种

q >= (-n)时
与q>0时同理
公式是2^(n-q) * (n+q) - 2^n + 1 + 2^n + 2^(n + 1) + …… +2^(n - q - 1)
=2^(n-q) * (n + q + 1) - 2^(n+1) + 1
