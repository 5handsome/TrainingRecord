<utf-8>
"这周的题目和下周的算一份"（看见了）
"下周日之前完成就行"（没看见）
姚一鸣本以为这个星期的题是与下个星期的题合并了，所以这个星期可以拖一会儿了，然而他没想到，这些题还得这个星期交
因此他一不小心差点通宵，结果是上课迟到了二十多分钟 
结论：有一双明亮的眼睛非常重要，可以减少熬夜的次数
-------------------------------------------------------------------------------------------------------------
洛谷P3392涂国旗
方法：暴力破解
    储存国旗时只储存这行涂成某种颜色需要多少次涂色，如flag_color[行数][色彩]=这行其他颜色的和
    然后两层循环一个一个的试
    把最小的一个数保留

洛谷P1255数楼梯
方法：高精、递归
    算斐波那契数列
    初始想法：直接写一个类，用long long arr[100]代替char arr[100]
        原因：这样可以表达的数的密度更大，节省空间，加快速度
        测试出现bug，弃用
    直接char高精其实也挺好的 _(:3」∠ )_

洛谷P1219八皇后
方法：递归、dfs
    dfs直接套用模板（只不过进行了大量修改）
    void search(int k){
        for(遍历这一步的多种走法){
            if(可以走){
                记录这一步(入栈)
                标记这一步产生的影响(如地图上那些地方不能走了)
                if(到终点了){
                    {按题目要求填写}
                }else{search(k+1);}
                撤销这一步(出栈)
                取消这一步的影响
            }
        }
    }
    这里每下一个棋，就是搜索了一步，当把棋全部下完时，就相当于到了终点

hdu1556 color the ball
    思路：前缀和


其他：
    自家的电脑直接声明过大的数组程序可能会崩，但洛谷的电脑好像就可以
    
    发现了debug新方法
        #define debug
        #ifdef debug
        #define dbg(x) {x;}
        #else 
        #define dbg(x)
        #endif
    这样debug就可以直接用一下这种格式了：
        dbg(
                代码
        )
        